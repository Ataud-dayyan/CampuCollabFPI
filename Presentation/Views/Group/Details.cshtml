@model Data.Model.GroupModel
@using CampusCollabFPI.Data.Models
@using Data.Model
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Group Details";
    var currentUserId = UserManager.GetUserId(User);
    var isOwner = Model.CreatedById == currentUserId;
    var isAdmin = User.IsInRole("Admin");
}
<link href="~/css/groupdetails.css"rel="stylesheet" />

<!-- Theme Toggle Button -->
<button class="theme-toggle" id="themeToggle" title="Toggle Dark Mode">
    <i class="fas fa-moon" id="themeIcon"></i>
</button>

<div class="container">
    <!-- Hero Section -->
    <div class="hero-section">
        <div class="hero-content">
            <h1 class="hero-title">@Model.Name</h1>
            <div class="hero-badges">
                <span class="hero-badge">
                    <i class="fas fa-building me-2"></i>@Model.Department
                </span>
                <span class="hero-badge">
                    <i class="fas fa-university me-2"></i>@Model.Faculty
                </span>
                <span class="hero-badge">
                    <i class="fas fa-layer-group me-2"></i>Level @Model.SchoolLevel
                </span>
                <span class="hero-badge">
                    <i class="fas fa-user-crown me-2"></i>@Model.CreatedByUser?.UserName
                </span>
            </div>
        </div>
    </div>

    <!-- Course Information -->
    <div class="glass-card">
        <div class="section-header">
            <div class="section-icon">
                <i class="fas fa-book-open"></i>
            </div>
            <h2 class="section-title">Course Information</h2>
        </div>
        <p class="course-description"><strong>Description:</strong> @Model.CourseName</p>
    </div>

    <!-- Members Section -->
    <div class="glass-card">
        <div class="section-header">
            <div class="section-icon">
                <i class="fas fa-users"></i>
            </div>
            <h2 class="section-title">Members (@Model.Members.Count())</h2>
        </div>

        <div class="members-grid">
            @foreach (var member in Model.Members)
            {
                var avatar = (member.User as CampusCollabFPI.Data.Models.ApplicationUser)?.Avatar;
                <div class="member-card">
                    <div class="member-info">
                        @if (!string.IsNullOrEmpty(avatar))
                        {
                            <img src="~/images/avatars/@avatar" alt="Avatar" class="member-avatar" />
                        }
                        else
                        {
                            <img src="~/images/avatars/default.png" alt="Default Avatar" class="member-avatar" />
                        }
                        <div class="member-name">@member.User.UserName</div>
                    </div>
                </div>
            }
        </div>

        @if (Model.Members.Any(m => m.UserId == UserManager.GetUserId(User)))
        {
            <div class="mt-4">
                <form asp-action="Leave" method="post" class="d-inline">
                    <input type="hidden" name="groupId" value="@Model.Id" />
                    <button type="submit" class="btn-modern btn-danger">
                        <i class="fas fa-sign-out-alt"></i>Leave Group
                    </button>
                </form>
            </div>
        }
    </div>

    <!-- Posts Section -->
    <div class="glass-card">
        <div class="section-header">
            <div class="section-icon">
                <i class="fas fa-comments"></i>
            </div>
            <h2 class="section-title">Group Discussion</h2>
        </div>

        @if (User.Identity.IsAuthenticated)
        {
            <!-- Post Composer -->
            <div class="post-composer">
                <form asp-controller="Group" asp-action="PostMessage" method="post">
                    <input type="hidden" name="groupId" value="@Model.Id" />
                    <div class="mb-3">
                        <textarea name="content" class="post-textarea" placeholder="What's on your mind? Share your thoughts with the group..." required></textarea>
                    </div>
                    <button type="submit" class="btn-modern btn-primary">
                        <i class="fas fa-paper-plane"></i>Post Message
                    </button>
                </form>
            </div>

            <!-- Posts Display -->
            @if (Model.Posts.Any())
            {
                <div class="posts-list">
                    @foreach (var post in Model.Posts.OrderByDescending(p => p.PostedAt))
                    {
                        <div class="post-card">
                            <div class="post-header">
                                <div class="post-author">@post.User.UserName</div>
                                <div class="post-time">@post.PostedAt.ToString("MMM dd, yyyy 'at' h:mm tt")</div>
                            </div>
                            <div class="post-content">@post.Content</div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <div class="empty-state-icon">
                        <i class="fas fa-comments"></i>
                    </div>
                    <h3 class="empty-state-title">No discussions yet</h3>
                    <p>Be the first to start a meaningful conversation!</p>
                </div>
            }
        }
        else
        {
            <div class="empty-state">
                <div class="empty-state-icon">
                    <i class="fas fa-lock"></i>
                </div>
                <h3 class="empty-state-title">Login Required</h3>
                <p>Please log in to view and participate in group discussions.</p>
            </div>
        }
    </div>

    <!-- Action Bar -->
    <div class="action-bar">
        @if (User.IsInRole("Lecturer"))
        {
            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn-modern btn-danger">
                <i class="fas fa-trash-alt"></i>Delete Group
            </a>
        }
        else
        {
            <form asp-action="Join" method="post" class="d-inline">
                <input type="hidden" name="groupId" value="@Model.Id" />
                <button type="submit" class="btn-modern btn-primary">
                    <i class="fas fa-user-plus"></i>Join Group
                </button>
            </form>
        }
        <a asp-action="Index" class="btn-modern btn-secondary">
            <i class="fas fa-arrow-left"></i>Back to Groups
        </a>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const themeToggle = document.getElementById('themeToggle');
        const themeIcon = document.getElementById('themeIcon');
        const body = document.body;

        // Check for saved theme preference or default to 'light'
        const currentTheme = localStorage.getItem('theme') || 'light';
        body.setAttribute('data-theme', currentTheme);

        // Update icon based on current theme
        updateThemeIcon(currentTheme);

        // Add staggered animation to cards
        const cards = document.querySelectorAll('.glass-card, .member-card, .post-card');
        cards.forEach((card, index) => {
            card.style.animationDelay = `${index * 0.1}s`;
        });

        themeToggle.addEventListener('click', function() {
            const currentTheme = body.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

            // Add a subtle animation to the theme toggle
            themeToggle.style.animation = 'pulse 0.3s ease';

            body.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            updateThemeIcon(newTheme);

            // Reset animation
            setTimeout(() => {
                themeToggle.style.animation = '';
            }, 300);
        });

        function updateThemeIcon(theme) {
            if (theme === 'dark') {
                themeIcon.className = 'fas fa-sun';
                themeToggle.title = 'Switch to Light Mode';
            } else {
                themeIcon.className = 'fas fa-moon';
                themeToggle.title = 'Switch to Dark Mode';
            }
        }

        // Add smooth scrolling for better UX
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                document.querySelector(this.getAttribute('href')).scrollIntoView({
                    behavior: 'smooth'
                });
            });
        });

        // Add hover effects to buttons
        const buttons = document.querySelectorAll('.btn-modern');
        buttons.forEach(button => {
            button.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-2px)';
            });

            button.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0)';
            });
        });
    });
</script>